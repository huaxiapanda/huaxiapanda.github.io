<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu Docker 安装</title>
      <link href="/2019/09/24/Ubuntu%20Docker%20%E5%AE%89%E8%A3%85/"/>
      <url>/2019/09/24/Ubuntu%20Docker%20%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>@[toc]</p><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><p>Docker要求ubuntu系统的内核版本高于3.10，在进行浏览本页面时，请首先查看你的系统内核版本。如果不符合要求，请升级内核版本，或者更换其他安装方法。通过uname -a查看系统内核版本。</p><pre><code class="shell">huaxiapanda@huaxiapanda:~$ uname -a</code></pre><p><img src="//huaxiapanda.github.io/2019/09/24/Ubuntu Docker 安装/01.png" alt="图1"></p><h1 id="使用脚本安装Docker"><a href="#使用脚本安装Docker" class="headerlink" title="使用脚本安装Docker"></a>使用脚本安装Docker</h1><h2 id="获取最新版本的docker安装包"><a href="#获取最新版本的docker安装包" class="headerlink" title="获取最新版本的docker安装包"></a>获取最新版本的docker安装包</h2><pre><code class="shell">huaxiapanda@huaxiapanda:~$ wget -qO- https://get.docker.com/ | sh</code></pre><p><img src="//huaxiapanda.github.io/2019/09/24/Ubuntu Docker 安装/02.png" alt="图2"><br>安装完成后，会有一个提示：</p><pre><code class="shell">If you would like to use Docker as a non-root user, you should now consider    adding your user to the &quot;docker&quot; group with something like:    sudo usermod -aG docker runoob   Remember that you will have to log out and back in for this to take effect!  </code></pre><p>当要以非root用户可以直接运行docker时，需要执行 sudo usermod -aG docker huaxiapanda 命令，然后重新登陆，否则会报没有权限的错误。会出现Docker daemon socket权限不足：<br><img src="//huaxiapanda.github.io/2019/09/24/Ubuntu Docker 安装/04.png" alt="图3"></p><ul><li>方案1 ：使用sudo获取root权限</li><li>方案2： 添加docker用户组，将当前用户加入docker用户组<pre><code class="shell">huaxiapanda@huaxiapanda:~$ sudo groupadd docker #添加docker用户组groupadd：“docker”组已存在huaxiapanda@huaxiapanda:~$ sudo gpasswd -a $USER docker #将登陆用户加入到docker用户组中正在将用户“huaxiapanda”加入到“docker”组中huaxiapanda@huaxiapanda:~$ newgrp docker #更新用户组huaxiapanda@huaxiapanda:~$ docker ps #测试当前用户是否可以正常使用docker命令CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMEShuaxiapanda@huaxiapanda:~$</code></pre><img src="//huaxiapanda.github.io/2019/09/24/Ubuntu Docker 安装/03.png" alt="图4"><h2 id="启动docker后台服务"><a href="#启动docker后台服务" class="headerlink" title="启动docker后台服务"></a>启动docker后台服务</h2><pre><code class="shell"># 启动docker服务huaxiapanda@huaxiapanda:~$ sudo service docker start# 查看docker服务状态huaxiapanda@huaxiapanda:~$ sudo service docker status</code></pre><img src="//huaxiapanda.github.io/2019/09/24/Ubuntu Docker 安装/05.png" alt="图5"><h2 id="测试运行hello-world"><a href="#测试运行hello-world" class="headerlink" title="测试运行hello-world"></a>测试运行hello-world</h2><pre><code class="shell">huaxiapanda@huaxiapanda:~$ docker run hello-world</code></pre><img src="//huaxiapanda.github.io/2019/09/24/Ubuntu Docker 安装/06.png" alt="图6"><br>至此，你就已经把docker在ubuntu系统安装好了！</li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub Pages搭建个人博客站点</title>
      <link href="/2019/09/21/Hexo+GitHub%20Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/"/>
      <url>/2019/09/21/Hexo+GitHub%20Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>@[toc]</p><h1 id="使用GitHub-Pages-Hexo搭建个人博客站点"><a href="#使用GitHub-Pages-Hexo搭建个人博客站点" class="headerlink" title="使用GitHub Pages + Hexo搭建个人博客站点"></a>使用GitHub Pages + Hexo搭建个人博客站点</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个程序员都想把自己学习的过程和开发中遇到的问题记录下来，以便给后来人留下来一点东西参考。在市面上有很多已经成熟的写技术博客的网站，比如掘进、知乎、简书、开源中国、CSDN等,这些网站的特点就是，你不需要关心那么多，只需要在上面写文章即可，网站会帮你管理控制。但是，这些网站也有一些不好的地方，样式单一，不可控制，广告繁多。尤其是CSDN这个网站。广告是特别的多，且下载一些东西的时候，限制特别多。CSDN上现在管理也特别混乱，抄袭成篇，文章大多是小白写的，参考性不大。当然不是贬低小白，只是在陈述一种情况！所以，我没有选择在上述网站写自己的技术博客，于是自己就在github上通过GitHub Pages搭建自己的个人博客站点。现在讲搭建的博客一些步骤记录下来，希望能够对未来的你有所帮助，少趟一些坑。把更多的经历放在博客文章上面。也是自己博客的第一篇文章，如有不足，请多关照。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>Git</li><li>NodeJS</li></ul><p><strong>这里默认搭建已经全部安装好了上述环境，不会的自行百度!对于程序员而言，这些不难的！其次我本身使用的深度国产操作系统(国产Linux),其他操作系统操作步骤一样！略有差别</strong></p><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>打开shell终端，输入命令‘npm install -g hexo’，如果提示权限错误,请在命令前面添加sudo,如图所示:<br><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/one.png" alt="图1"></p><h3 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h3><p>在你的电脑创建一个文件夹用来进行初始化博客,我们在这里创建的文件夹是Hexo,然后切换至Hexo文件夹，执行hexo初始化命令hexo init.<br><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/two.png" alt="图2"><br>初始化之后，hexo的目录结构如下所示<br><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/three.png" alt="图3"></p><ul><li>public: 这个是存放hexo编译md文件生成的html文件的一个目录。不用关注</li><li>node_modules: 这个是放一些模块代码的地方。不用关注。</li><li>scaffolds: 这个是存放一些模板md文件的地方。</li><li>source: 这是存放我们自己编写的博客文件的地方。主要关注这个地方。</li><li>themes: 这个地方是存放一些主题文件的地方，我们可以讲下载的主题放在这个文件夹下。</li></ul><h3 id="更换一个博客主题"><a href="#更换一个博客主题" class="headerlink" title="更换一个博客主题"></a>更换一个博客主题</h3><p>hexo的默认的主题是landscape,不是很好看，大家可以根据自己的喜欢设置自己喜欢的博客主题，这里我使用的是<a href="https://yelog.org/" target="_blank" rel="noopener">叶落阁</a>的开源三段式主题。在shell窗口中输入命令：</p><pre><code class="shell">git clone https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo</code></pre><p>克隆完成后，会在themes目录下看见3-hexo目录。接下来会使用3-hexo进行演示。<br>获取更多主题请访问hexo主题页面<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo主题</a></p><h3 id="修改-config-yml对博客进行基础配置"><a href="#修改-config-yml对博客进行基础配置" class="headerlink" title="修改_config.yml对博客进行基础配置"></a>修改_config.yml对博客进行基础配置</h3><p><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/four.png" alt="图4"><br><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/five.png" alt="图5"><br>修改之后进行保存。<br><strong>注意，冒号后面一定要有一个空格，否则编译报错</strong></p><h3 id="预览本地博客"><a href="#预览本地博客" class="headerlink" title="预览本地博客"></a>预览本地博客</h3><ul><li>编译项目：hexo g</li><li>运行项目：hexo s</li></ul><p>在浏览器输入：<a href="http://localhost:4000/就可以本地访问博客主页了" target="_blank" rel="noopener">http://localhost:4000/就可以本地访问博客主页了</a></p><h2 id="部署博客到GitHub-Pages"><a href="#部署博客到GitHub-Pages" class="headerlink" title="部署博客到GitHub Pages"></a>部署博客到GitHub Pages</h2><h3 id="创建GitHub账号"><a href="#创建GitHub账号" class="headerlink" title="创建GitHub账号"></a>创建GitHub账号</h3><p>这个就不多说了，每一个程序员应该都有一个这样的账号，即使没有更新过任何代码。到<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>注册即可。</p><h3 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h3><p><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/six.png" alt="图6"><br><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/seven.png" alt="图7"><br>仓库创建好之后，复制仓库的地址。</p><h3 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml"></a>修改_config.yml</h3><p><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/eight.png" alt="图8"><br><strong>注意，冒号后面一定要有一个空格，否则编译报错</strong></p><h3 id="发布到GitHub-Pages"><a href="#发布到GitHub-Pages" class="headerlink" title="发布到GitHub Pages"></a>发布到GitHub Pages</h3><p>首先安装自动部署工作，在shell窗口输入命令：</p><pre><code class="shell">npm install hexo-deployer-git --save</code></pre><p>然后输入命令发布博客:</p><pre><code class="shell">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>最后在浏览器输入username.github.io即可访问博客。<br>关于3-hexo主图的使用请参照<a href="https://yelog.org/2017/03/23/3-hexo-instruction/" target="_blank" rel="noopener">3-hexo使用说明</a></p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><h3 id="关于md文件插入本地图片在GitHub-Pages无法显示的问题说明"><a href="#关于md文件插入本地图片在GitHub-Pages无法显示的问题说明" class="headerlink" title="关于md文件插入本地图片在GitHub Pages无法显示的问题说明"></a>关于md文件插入本地图片在GitHub Pages无法显示的问题说明</h3><p> 由于hexo3版本后对很多插件支持有问题，hexo-asset-image插件在处理data.permalink链接时出现路径错误，把年月去掉了，导致最后生成的路径为%d/xxx/xxx需要对其做兼容处理。通过判断当前版本是否等于3的版本做不同的路径分割。因此，这里提供一个已经修复这个bug的插件</p><pre><code class="shell">npm install https://github.com/7ym0n/hexo-asset-image --save</code></pre><p>之后重新编译发布即可。然后刷新浏览器即可！</p><h3 id="使用插件生产rss订阅信息"><a href="#使用插件生产rss订阅信息" class="headerlink" title="使用插件生产rss订阅信息"></a>使用插件生产rss订阅信息</h3><ul><li>hexo博客有一个专门生成RSS xml文件的插件hexo-generator-feed,我们只需要安装这个插件并配置即可。<pre><code class="shell">npm install hexo-generator-feed</code></pre></li><li>启用插件<br>在博客工程的根目录下的_config.xml文件中添加如下内容:<pre><code># Extensions## Plugins: https://hexo.io/plugins/plugins:hexo-generator-feed# feed atomfeed:type: atompath: atom.xmllimit: 20</code></pre><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/nine.png" alt="图9"><br>之后需要修改themes/3-hexo目录下的_config.xml文件<pre><code>link:theme: color # 链接样式，color: 彩色图标  white: 黑白图标items:  rss: /atom.xml  github: https://github.com/huaxiapanda  email: huaxiapanda@163.com  qq: 805056750  kugou: https://www.kugou.com/  linkedin:  reddit:  jianshu:  zhihu:  oschina:  juejin:</code></pre><img src="//huaxiapanda.github.io/2019/09/21/Hexo+GitHub Pages搭建个人博客站点/ten.png" alt="图10"><br>重新发布,重新刷新浏览器即可.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
